spring.application.name=Feuerwehr Cronenberg WebCMS

# Datenbankverbindung
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/feuerwehr
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

# Optional: falls DB noch nicht direkt erreichbar ist
spring.sql.init.continue-on-error=true
spring.sql.init.mode=always

# Nur gezielte JPA-Entity-Suche ? beschleunigt Startup
spring.jpa.packages-to-scan=de.feuerwehr.cronenberg.webcms.model

# JPA & Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Optional: SQL-Logging abschalten, wenn?s zu viel ist
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Statische Ressourcen
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.strategy.content.paths=/**

# Admin-Credentials für CMS
cms.admin.username=${CMS_ADMIN_USERNAME}
cms.admin.password=${CMS_ADMIN_PASSWORD}

# JTE Einstellungen
gg.jte.developmentMode=true

# Optional: Devtools deaktivieren für schnelleres Starten
spring.devtools.restart.enabled=false
